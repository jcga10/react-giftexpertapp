{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAZU,SAACC,GAEjBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAOlB,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACkCC,UAAUH,GAD5C,+DAEAI,MAAOF,GAFP,cAEZG,EAFY,gBAGEA,EAAKC,OAHP,uBAGXC,EAHW,EAGXA,KACDC,EAAMD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACvB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARxB,kBAWXM,GAXW,4CAAF,sDCEPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,EAAL,WCJCO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAUrB,ECZuB,SAACA,GACxB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KA0BA,OArBAC,qBAAW,WAEPxB,EAAQC,GAAUwB,MAAK,SAAAC,GAMfH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAOtB,CAACpB,IAIIqB,EDfuBK,CAAa1B,GAA9Ba,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAGrB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAIYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADKA,EAAIC,aE1B5BgB,EAAe,WAIxB,MAAoCzC,mBAAS,CAAC,gBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAOA,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACM2C,EAAWnB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCjBzB6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6e7051f8.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    \r\n\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit= (e)=>{\r\n\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats=>[inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}> \r\n            \r\n            <input \r\n                type='text' \r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            /> \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs= async(category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=9HNNX8YWidKc7UPHeaS9LpDjXqQYKIdi`;\r\n    const resp= await fetch (url);\r\n    const {data}= await resp.json();\r\n    const gifs= data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        } \r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n\r\n    //console.log(id, title, url);\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    /*const [images, setImages] = useState([]);\r\n    \r\n\r\n    useEffect(()=>{\r\n        getGifs(category).then(setImages)\r\n    },[category])*/\r\n    \r\n\r\n    const { data:images, loading}=useFetchGifs(category); \r\n    //console.log(loading);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            \r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className='card-grid'>\r\n                \r\n            \r\n                    {\r\n                        images.map(img=>(\r\n                            <GifGridItem\r\n                                key={img.id} \r\n                            {...img}\r\n                            />\r\n                        ))\r\n                    }\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs= (category)=>{\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect( ()=>{\r\n        \r\n        getGifs(category).then(imgs =>{\r\n            \r\n           \r\n\r\n               \r\n\r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n           \r\n\r\n           \r\n        });\r\n\r\n    },[category])\r\n\r\n    \r\n\r\n    return state; //{data:[],loading:true};\r\n\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories=['One Punch','Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    //const hanldeAdd= ()=>{\r\n        //setCategories([...categories,'HunterXHunter'] );\r\n        //setCategories(cats=>[...cats,'HunterXHunter']);\r\n    //};\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertAPP</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/> \r\n               \r\n            <ol>\r\n                { categories.map( category=>(\r\n                    <GifGrid \r\n                    key={category}\r\n                    category={category} \r\n                    />\r\n                 ) )\r\n                }\r\n            </ol>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n \n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}